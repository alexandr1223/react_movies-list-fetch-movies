{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","findMovie","title","url","fetch","then","resp","json","FindMovie","setMoviesList","useState","search","setSearch","preview","setPreview","isError","setIsError","htmlFor","type","id","placeholder","classNames","value","onChange","e","undefined","target","onClick","data","Response","includes","App","moviesList","ReactDOM","render","document","getElementById"],"mappings":"iTAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC3BGC,EAA8B,SAACC,GAC1C,IAAQC,EAAWD,EAAXC,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMW,c,uBCVRC,EAAY,SAACC,GAAD,OAHRC,EAGmC,MAAD,OAAOD,GAHzBE,MAAM,GAAD,OAFrB,wDAEqB,OAAeD,IAClDE,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UADL,IAACJ,GCUJK,G,MAA6B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,cAAeX,EAAa,EAAbA,OAC1D,EAA4BY,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAuBA,OACE,qCACE,uBAAM1B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAW+B,IACT,QACA,CAAE,YAAaN,IAEjB,UAAQ,OACRO,MAAOX,EACPY,SAAU,SAACC,GACTR,GAAW,GACXF,OAAWW,GACXb,EAAUY,EAAEE,OAAOJ,YAKxBP,GACC,mBAAGzB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACV,UAAQ,MACRqC,QA7DQ,WAClB1B,EAAUU,GACPN,MAAK,SAAAuB,GACkB,SAAlBA,EAAKC,UACPf,EAAWc,GACXZ,GAAW,KAEXF,OAAWW,GACXT,GAAW,QAiDT,4BAUF,qBAAK1B,UAAU,UAAf,cACemC,IAAZZ,GACC,wBACEK,KAAK,SACL5B,UAAU,oBACVqC,QAAS,WA1DjBd,IACGf,EAAOgC,SAASjB,IACnBJ,EAAc,GAAD,mBAAKX,GAAL,CAAae,OAqDpB,qCAYPA,GACC,sBAAKvB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOwB,YChGfkB,G,MAAgB,WAC3B,MAAoCrB,mBAAkB,IAAtD,mBAAOsB,EAAP,KAAmBvB,EAAnB,KAEA,OACE,sBAAKnB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQkC,MAEtB,qBAAK1C,UAAU,UAAf,SACE,cAAC,EAAD,CAAWQ,OAAQkC,EAAYvB,cAAeA,WCVtDwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6e34637c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=da70b4e9';\n\nconst request = (url: string) => fetch(`${BASE_URL}${url}`)\n  .then(resp => resp.json());\n\nexport const findMovie = (title: string) => request(`&t=${title}`);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { findMovie } from '../../api/api';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  movies: Movie[],\n  setMoviesList: (data: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMoviesList, movies }) => {\n  const [search, setSearch] = useState('');\n  const [preview, setPreview] = useState<Movie>();\n  const [isError, setIsError] = useState(false);\n\n  const searchMovie = () => {\n    findMovie(search)\n      .then(data => {\n        if (data.Response === 'True') {\n          setPreview(data);\n          setIsError(false);\n        } else {\n          setPreview(undefined);\n          setIsError(true);\n        }\n      });\n  };\n\n  const addNewMovie = () => {\n    if (preview) {\n      if (!movies.includes(preview)) {\n        setMoviesList([...movies, preview]);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': isError },\n              )}\n              data-cy=\"find\"\n              value={search}\n              onChange={(e) => {\n                setIsError(false);\n                setPreview(undefined);\n                setSearch(e.target.value);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"add\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {preview !== undefined && (\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addNewMovie()}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {preview && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={preview} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [moviesList, setMoviesList] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={moviesList} setMoviesList={setMoviesList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}